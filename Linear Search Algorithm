How Does Linear Search Algorithm Work?
In Linear Search Algorithm, 

Every element is considered as a potential match for the key and checked for the same.
If any element is found equal to the key, the search is successful and the index of that element is returned.
If no element is found equal to the key, the search yields “No match found”.
For example: Consider the array arr[] = {10, 50, 30, 70, 80, 20, 90, 40} and key = 30


// C++ code to linearly search x in arr[]. 

#include <bits/stdc++.h> 
using namespace std; 

int search(int arr[], int N, int x) 
{ 
	for (int i = 0; i < N; i++) 
		if (arr[i] == x) 
			return i; 
	return -1; 
} 

// Driver code 
int main(void) 
{ 
	int arr[] = { 2, 3, 4, 10, 40 }; 
	int x = 10; 
	int N = sizeof(arr) / sizeof(arr[0]); 

	// Function call 
	int result = search(arr, N, x); 
	(result == -1) 
		? cout << "Element is not present in array"
		: cout << "Element is present at index " << result; 
	return 0; 
}
